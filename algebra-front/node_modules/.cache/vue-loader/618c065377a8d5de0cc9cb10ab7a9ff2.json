{"remainingRequest":"D:\\9Space\\idea\\algebra\\algebra-front\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\9Space\\idea\\algebra\\algebra-front\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\9Space\\idea\\algebra\\algebra-front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\9Space\\idea\\algebra\\algebra-front\\src\\components\\home\\IndexHome.vue?vue&type=template&id=0b7e9111&scoped=true&","dependencies":[{"path":"D:\\9Space\\idea\\algebra\\algebra-front\\src\\components\\home\\IndexHome.vue","mtime":1615638724826},{"path":"D:\\9Space\\idea\\algebra\\algebra-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\9Space\\idea\\algebra\\algebra-front\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\9Space\\idea\\algebra\\algebra-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\9Space\\idea\\algebra\\algebra-front\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}