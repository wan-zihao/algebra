{"version":3,"sources":["webpack:///./node_modules/core-js/modules/es.string.split.js","webpack:///./src/components/home/IndexHome.vue?52b5","webpack:///./node_modules/core-js/modules/es.regexp.to-string.js","webpack:///./node_modules/core-js/internals/is-regexp.js","webpack:///./src/components/home/IndexHome.vue?b91d","webpack:///src/components/home/IndexHome.vue","webpack:///./src/components/home/IndexHome.vue?6afd","webpack:///./src/components/home/IndexHome.vue"],"names":["fixRegExpWellKnownSymbolLogic","isRegExp","anObject","requireObjectCoercible","speciesConstructor","advanceStringIndex","toLength","callRegExpExec","regexpExec","fails","arrayPush","push","min","Math","MAX_UINT32","SUPPORTS_Y","RegExp","SPLIT","nativeSplit","maybeCallNative","internalSplit","split","length","separator","limit","string","String","this","lim","undefined","call","match","lastIndex","lastLength","output","flags","ignoreCase","multiline","unicode","sticky","lastLastIndex","separatorCopy","source","slice","index","apply","test","O","splitter","regexp","res","done","value","rx","S","C","unicodeMatching","p","q","A","e","z","i","redefine","TO_STRING","RegExpPrototype","prototype","nativeToString","NOT_GENERIC","INCORRECT_NAME","name","R","rf","f","unsafe","isObject","classof","wellKnownSymbol","MATCH","module","exports","it","render","_vm","_h","$createElement","_c","_self","attrs","staticStyle","tabPosition","staticClass","_v","model","form","callback","$$v","$set","expression","domProps","_s","result","result1","on","determinantCalculation","matrixAddition","matrixMultiplication","matrixTranspose","inverseMatrix","result7","matrixRank","result8","linearDependence","eigenvalueMatrix","result10","isSimilar","staticRenderFns","data","textarea1","textarea3_1","textarea3_2","textarea4_1","textarea4_2","textarea5","textarea6","textarea7","textarea8","textarea9","textarea10_1","textarea10_2","result2","result3","result4","result5","result6","result9","methods","formatArr","respArr","postRequest","querystring","stringify","then","component"],"mappings":"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","file":"js/chunk-ebb87c32.a9c1f3d6.js","sourcesContent":["'use strict';\nvar fixRegExpWellKnownSymbolLogic = require('../internals/fix-regexp-well-known-symbol-logic');\nvar isRegExp = require('../internals/is-regexp');\nvar anObject = require('../internals/an-object');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar speciesConstructor = require('../internals/species-constructor');\nvar advanceStringIndex = require('../internals/advance-string-index');\nvar toLength = require('../internals/to-length');\nvar callRegExpExec = require('../internals/regexp-exec-abstract');\nvar regexpExec = require('../internals/regexp-exec');\nvar fails = require('../internals/fails');\n\nvar arrayPush = [].push;\nvar min = Math.min;\nvar MAX_UINT32 = 0xFFFFFFFF;\n\n// babel-minify transpiles RegExp('x', 'y') -> /x/y and it causes SyntaxError\nvar SUPPORTS_Y = !fails(function () { return !RegExp(MAX_UINT32, 'y'); });\n\n// @@split logic\nfixRegExpWellKnownSymbolLogic('split', 2, function (SPLIT, nativeSplit, maybeCallNative) {\n  var internalSplit;\n  if (\n    'abbc'.split(/(b)*/)[1] == 'c' ||\n    // eslint-disable-next-line regexp/no-empty-group -- required for testing\n    'test'.split(/(?:)/, -1).length != 4 ||\n    'ab'.split(/(?:ab)*/).length != 2 ||\n    '.'.split(/(.?)(.?)/).length != 4 ||\n    // eslint-disable-next-line regexp/no-assertion-capturing-group, regexp/no-empty-group -- required for testing\n    '.'.split(/()()/).length > 1 ||\n    ''.split(/.?/).length\n  ) {\n    // based on es5-shim implementation, need to rework it\n    internalSplit = function (separator, limit) {\n      var string = String(requireObjectCoercible(this));\n      var lim = limit === undefined ? MAX_UINT32 : limit >>> 0;\n      if (lim === 0) return [];\n      if (separator === undefined) return [string];\n      // If `separator` is not a regex, use native split\n      if (!isRegExp(separator)) {\n        return nativeSplit.call(string, separator, lim);\n      }\n      var output = [];\n      var flags = (separator.ignoreCase ? 'i' : '') +\n                  (separator.multiline ? 'm' : '') +\n                  (separator.unicode ? 'u' : '') +\n                  (separator.sticky ? 'y' : '');\n      var lastLastIndex = 0;\n      // Make `global` and avoid `lastIndex` issues by working with a copy\n      var separatorCopy = new RegExp(separator.source, flags + 'g');\n      var match, lastIndex, lastLength;\n      while (match = regexpExec.call(separatorCopy, string)) {\n        lastIndex = separatorCopy.lastIndex;\n        if (lastIndex > lastLastIndex) {\n          output.push(string.slice(lastLastIndex, match.index));\n          if (match.length > 1 && match.index < string.length) arrayPush.apply(output, match.slice(1));\n          lastLength = match[0].length;\n          lastLastIndex = lastIndex;\n          if (output.length >= lim) break;\n        }\n        if (separatorCopy.lastIndex === match.index) separatorCopy.lastIndex++; // Avoid an infinite loop\n      }\n      if (lastLastIndex === string.length) {\n        if (lastLength || !separatorCopy.test('')) output.push('');\n      } else output.push(string.slice(lastLastIndex));\n      return output.length > lim ? output.slice(0, lim) : output;\n    };\n  // Chakra, V8\n  } else if ('0'.split(undefined, 0).length) {\n    internalSplit = function (separator, limit) {\n      return separator === undefined && limit === 0 ? [] : nativeSplit.call(this, separator, limit);\n    };\n  } else internalSplit = nativeSplit;\n\n  return [\n    // `String.prototype.split` method\n    // https://tc39.es/ecma262/#sec-string.prototype.split\n    function split(separator, limit) {\n      var O = requireObjectCoercible(this);\n      var splitter = separator == undefined ? undefined : separator[SPLIT];\n      return splitter !== undefined\n        ? splitter.call(separator, O, limit)\n        : internalSplit.call(String(O), separator, limit);\n    },\n    // `RegExp.prototype[@@split]` method\n    // https://tc39.es/ecma262/#sec-regexp.prototype-@@split\n    //\n    // NOTE: This cannot be properly polyfilled in engines that don't support\n    // the 'y' flag.\n    function (regexp, limit) {\n      var res = maybeCallNative(internalSplit, regexp, this, limit, internalSplit !== nativeSplit);\n      if (res.done) return res.value;\n\n      var rx = anObject(regexp);\n      var S = String(this);\n      var C = speciesConstructor(rx, RegExp);\n\n      var unicodeMatching = rx.unicode;\n      var flags = (rx.ignoreCase ? 'i' : '') +\n                  (rx.multiline ? 'm' : '') +\n                  (rx.unicode ? 'u' : '') +\n                  (SUPPORTS_Y ? 'y' : 'g');\n\n      // ^(? + rx + ) is needed, in combination with some S slicing, to\n      // simulate the 'y' flag.\n      var splitter = new C(SUPPORTS_Y ? rx : '^(?:' + rx.source + ')', flags);\n      var lim = limit === undefined ? MAX_UINT32 : limit >>> 0;\n      if (lim === 0) return [];\n      if (S.length === 0) return callRegExpExec(splitter, S) === null ? [S] : [];\n      var p = 0;\n      var q = 0;\n      var A = [];\n      while (q < S.length) {\n        splitter.lastIndex = SUPPORTS_Y ? q : 0;\n        var z = callRegExpExec(splitter, SUPPORTS_Y ? S : S.slice(q));\n        var e;\n        if (\n          z === null ||\n          (e = min(toLength(splitter.lastIndex + (SUPPORTS_Y ? 0 : q)), S.length)) === p\n        ) {\n          q = advanceStringIndex(S, q, unicodeMatching);\n        } else {\n          A.push(S.slice(p, q));\n          if (A.length === lim) return A;\n          for (var i = 1; i <= z.length - 1; i++) {\n            A.push(z[i]);\n            if (A.length === lim) return A;\n          }\n          q = p = e;\n        }\n      }\n      A.push(S.slice(p));\n      return A;\n    }\n  ];\n}, !SUPPORTS_Y);\n","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./IndexHome.vue?vue&type=style&index=0&id=51b9b114&scoped=true&lang=css&\"","'use strict';\nvar redefine = require('../internals/redefine');\nvar anObject = require('../internals/an-object');\nvar fails = require('../internals/fails');\nvar flags = require('../internals/regexp-flags');\n\nvar TO_STRING = 'toString';\nvar RegExpPrototype = RegExp.prototype;\nvar nativeToString = RegExpPrototype[TO_STRING];\n\nvar NOT_GENERIC = fails(function () { return nativeToString.call({ source: 'a', flags: 'b' }) != '/a/b'; });\n// FF44- RegExp#toString has a wrong name\nvar INCORRECT_NAME = nativeToString.name != TO_STRING;\n\n// `RegExp.prototype.toString` method\n// https://tc39.es/ecma262/#sec-regexp.prototype.tostring\nif (NOT_GENERIC || INCORRECT_NAME) {\n  redefine(RegExp.prototype, TO_STRING, function toString() {\n    var R = anObject(this);\n    var p = String(R.source);\n    var rf = R.flags;\n    var f = String(rf === undefined && R instanceof RegExp && !('flags' in RegExpPrototype) ? flags.call(R) : rf);\n    return '/' + p + '/' + f;\n  }, { unsafe: true });\n}\n","var isObject = require('../internals/is-object');\nvar classof = require('../internals/classof-raw');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar MATCH = wellKnownSymbol('match');\n\n// `IsRegExp` abstract operation\n// https://tc39.es/ecma262/#sec-isregexp\nmodule.exports = function (it) {\n  var isRegExp;\n  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : classof(it) == 'RegExp');\n};\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"main\"}},[_c('el-tabs',{staticStyle:{\"height\":\"500px\"},attrs:{\"tab-position\":_vm.tabPosition,\"type\":\"border-card\"}},[_c('el-tab-pane',{attrs:{\"label\":\"行列式求值\"}},[_c('div',{staticClass:\"item\"},[_c('div',[_vm._v(\"说明：输入一个行列式，输出行列式的值\")]),_c('el-divider'),_c('div',[_vm._v(\"格式：行数和列数要相同，两数之间用空格分隔，两行之间以英文状态下的逗号分隔\")]),_c('el-divider'),_c('div',{staticStyle:{\"float\":\"left\"}},[_c('el-input',{staticStyle:{\"width\":\"500px\"},attrs:{\"type\":\"textarea\",\"rows\":12,\"placeholder\":\"请输入行列式\",\"resize\":\"none\"},model:{value:(_vm.form.textarea1),callback:function ($$v) {_vm.$set(_vm.form, \"textarea1\", $$v)},expression:\"form.textarea1\"}})],1),_c('div',{staticStyle:{\"float\":\"right\",\"width\":\"650px\",\"height\":\"250px\"}},[_c('div',{staticStyle:{\"position\":\"relative\",\"top\":\"110px\"}},[_vm._v(\"输出结果为： \"),_c('el-tag',{staticStyle:{\"width\":\"150px\"},domProps:{\"textContent\":_vm._s(_vm.result.result1)}}),_c('el-button',{staticStyle:{\"position\":\"relative\",\"left\":\"10px\"},attrs:{\"type\":\"primary\"},on:{\"click\":_vm.determinantCalculation}},[_vm._v(\"输出\")])],1)])],1)]),_c('el-tab-pane',{attrs:{\"label\":\"矩阵加法\"}},[_c('div',{staticClass:\"item\"},[_c('div',[_vm._v(\"说明：输入两个矩阵，输出两个矩阵相加的结果\")]),_c('el-divider'),_c('div',[_vm._v(\"格式：两矩阵必须对应行列数相同，两数之间用空格分隔，两行之间以英文状态下的逗号分隔\")]),_c('el-divider'),_c('div',{staticClass:\"main-left\"},[_c('div',{staticClass:\"main-div3\"},[_c('el-input',{staticStyle:{\"width\":\"250px\"},attrs:{\"type\":\"textarea\",\"rows\":8,\"placeholder\":\"请输入矩阵一\",\"resize\":\"none\"},model:{value:(_vm.form.textarea3_1),callback:function ($$v) {_vm.$set(_vm.form, \"textarea3_1\", $$v)},expression:\"form.textarea3_1\"}}),_c('div',{staticStyle:{\"position\":\"relative\",\"top\":\"-75px\",\"font-size\":\"40px\",\"display\":\"inline\"}},[_c('b',[_vm._v(\"+\")])]),_c('el-input',{staticStyle:{\"width\":\"250px\"},attrs:{\"type\":\"textarea\",\"rows\":8,\"placeholder\":\"请输入矩阵二\",\"resize\":\"none\"},model:{value:(_vm.form.textarea3_2),callback:function ($$v) {_vm.$set(_vm.form, \"textarea3_2\", $$v)},expression:\"form.textarea3_2\"}})],1)]),_c('div',{staticClass:\"main-right\"},[_c('div',{staticClass:\"main-div3\"},[_c('div',{staticStyle:{\"position\":\"relative\",\"top\":\"-75px\",\"font-size\":\"40px\",\"display\":\"inline\"}},[_c('b',[_vm._v(\"=\")])]),_c('el-input',{staticStyle:{\"width\":\"250px\",\"position\":\"relative\",\"left\":\"30px\"},attrs:{\"type\":\"textarea\",\"rows\":8,\"resize\":\"none\"},model:{value:(_vm.result.result3),callback:function ($$v) {_vm.$set(_vm.result, \"result3\", $$v)},expression:\"result.result3\"}}),_c('el-button',{staticStyle:{\"position\":\"relative\",\"left\":\"50px\",\"top\":\"-75px\"},attrs:{\"type\":\"primary\"},on:{\"click\":_vm.matrixAddition}},[_vm._v(\"输出\")])],1)])],1)]),_c('el-tab-pane',{attrs:{\"label\":\"矩阵乘法\"}},[_c('div',{staticClass:\"item\"},[_c('div',[_vm._v(\"说明：输入两个矩阵，输出两个矩阵相乘的结果\")]),_c('el-divider'),_c('div',[_vm._v(\"格式：两矩阵必须对应行列数相同,两数之间用空格分隔，两行之间以英文状态下的逗号分隔\")]),_c('el-divider'),_c('div',{staticClass:\"main-left\"},[_c('div',{staticClass:\"main-div3\"},[_c('el-input',{staticStyle:{\"width\":\"250px\"},attrs:{\"type\":\"textarea\",\"rows\":8,\"placeholder\":\"请输入矩阵一\",\"resize\":\"none\"},model:{value:(_vm.form.textarea4_1),callback:function ($$v) {_vm.$set(_vm.form, \"textarea4_1\", $$v)},expression:\"form.textarea4_1\"}}),_c('div',{staticStyle:{\"position\":\"relative\",\"top\":\"-75px\",\"font-size\":\"40px\",\"display\":\"inline\"}},[_c('b',[_vm._v(\"x\")])]),_c('el-input',{staticStyle:{\"width\":\"250px\"},attrs:{\"type\":\"textarea\",\"rows\":8,\"placeholder\":\"请输入矩阵二\",\"resize\":\"none\"},model:{value:(_vm.form.textarea4_2),callback:function ($$v) {_vm.$set(_vm.form, \"textarea4_2\", $$v)},expression:\"form.textarea4_2\"}})],1)]),_c('div',{staticClass:\"main-right\"},[_c('div',{staticClass:\"main-div3\"},[_c('div',{staticStyle:{\"position\":\"relative\",\"top\":\"-75px\",\"font-size\":\"40px\",\"display\":\"inline\"}},[_c('b',[_vm._v(\"=\")])]),_c('el-input',{staticStyle:{\"width\":\"250px\",\"position\":\"relative\",\"left\":\"30px\"},attrs:{\"type\":\"textarea\",\"rows\":8,\"resize\":\"none\"},model:{value:(_vm.result.result4),callback:function ($$v) {_vm.$set(_vm.result, \"result4\", $$v)},expression:\"result.result4\"}}),_c('el-button',{staticStyle:{\"position\":\"relative\",\"left\":\"50px\",\"top\":\"-75px\"},attrs:{\"type\":\"primary\"},on:{\"click\":_vm.matrixMultiplication}},[_vm._v(\"输出\")])],1)])],1)]),_c('el-tab-pane',{attrs:{\"label\":\"矩阵的转置\"}},[_c('div',{staticClass:\"item\"},[_c('div',[_vm._v(\"说明：输入一个矩阵，输出转置矩阵\")]),_c('el-divider'),_c('div',[_vm._v(\"格式：两数之间用空格分隔，两行之间以英文状态下的逗号分隔\")]),_c('el-divider'),_c('div',{staticClass:\"main-left\"},[_c('el-input',{staticStyle:{\"width\":\"450px\"},attrs:{\"type\":\"textarea\",\"rows\":12,\"placeholder\":\"请输入矩阵\",\"resize\":\"none\"},model:{value:(_vm.form.textarea5),callback:function ($$v) {_vm.$set(_vm.form, \"textarea5\", $$v)},expression:\"form.textarea5\"}}),_c('div',{staticStyle:{\"position\":\"relative\",\"left\":\"20px\",\"top\":\"-120px\",\"font-size\":\"40px\",\"display\":\"inline\"}},[_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.matrixTranspose}},[_vm._v(\"转置\")])],1)],1),_c('div',{staticClass:\"main-right\"},[_c('el-input',{staticStyle:{\"width\":\"450px\"},attrs:{\"type\":\"textarea\",\"rows\":12,\"resize\":\"none\"},model:{value:(_vm.result.result5),callback:function ($$v) {_vm.$set(_vm.result, \"result5\", $$v)},expression:\"result.result5\"}})],1)],1)]),_c('el-tab-pane',{attrs:{\"label\":\"逆矩阵\"}},[_c('div',{staticClass:\"item\"},[_c('div',[_vm._v(\"说明：输入一个矩阵，输出逆矩阵\")]),_c('el-divider'),_c('div',[_vm._v(\"格式：行数和列数要相同，两数之间用空格分隔，两行之间以英文状态下的逗号分隔\")]),_c('el-divider'),_c('div',{staticClass:\"main-left\"},[_c('el-input',{staticStyle:{\"width\":\"450px\"},attrs:{\"type\":\"textarea\",\"rows\":12,\"placeholder\":\"请输入矩阵\",\"resize\":\"none\"},model:{value:(_vm.form.textarea6),callback:function ($$v) {_vm.$set(_vm.form, \"textarea6\", $$v)},expression:\"form.textarea6\"}}),_c('div',{staticStyle:{\"position\":\"relative\",\"left\":\"20px\",\"top\":\"-120px\",\"font-size\":\"40px\",\"display\":\"inline\"}},[_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.inverseMatrix}},[_vm._v(\"求逆\")])],1)],1),_c('div',{staticClass:\"main-right\"},[_c('el-input',{staticStyle:{\"width\":\"450px\"},attrs:{\"type\":\"textarea\",\"rows\":12,\"resize\":\"none\"},model:{value:(_vm.result.result6),callback:function ($$v) {_vm.$set(_vm.result, \"result6\", $$v)},expression:\"result.result6\"}})],1)],1)]),_c('el-tab-pane',{attrs:{\"label\":\"求矩阵的秩\"}},[_c('div',{staticClass:\"item\"},[_c('div',[_vm._v(\"说明：输入一个矩阵，输出矩阵的秩\")]),_c('el-divider'),_c('div',[_vm._v(\"格式：两数之间用空格分隔，两行之间以英文状态下的逗号分隔\")]),_c('el-divider'),_c('div',{staticStyle:{\"float\":\"left\"}},[_c('el-input',{staticStyle:{\"width\":\"500px\"},attrs:{\"type\":\"textarea\",\"rows\":12,\"placeholder\":\"请输入矩阵\",\"resize\":\"none\"},model:{value:(_vm.form.textarea7),callback:function ($$v) {_vm.$set(_vm.form, \"textarea7\", $$v)},expression:\"form.textarea7\"}})],1),_c('div',{staticStyle:{\"float\":\"right\",\"width\":\"650px\",\"height\":\"250px\"}},[_c('div',{staticStyle:{\"position\":\"relative\",\"top\":\"110px\"}},[_vm._v(\"输出结果为： \"),_c('el-tag',{staticStyle:{\"width\":\"150px\"},domProps:{\"textContent\":_vm._s(_vm.result.result7)}}),_c('el-button',{staticStyle:{\"position\":\"relative\",\"left\":\"10px\"},attrs:{\"type\":\"primary\"},on:{\"click\":_vm.matrixRank}},[_vm._v(\"输出\")])],1)])],1)]),_c('el-tab-pane',{attrs:{\"label\":\"线性相关的判断\"}},[_c('div',{staticClass:\"item\"},[_c('div',[_vm._v(\"说明：输入多组行向量组，输出是否线性相关\")]),_c('el-divider'),_c('div',[_vm._v(\"格式：两数之间用空格分隔，两行之间以英文状态下的逗号分隔\")]),_c('el-divider'),_c('div',{staticStyle:{\"float\":\"left\"}},[_c('el-input',{staticStyle:{\"width\":\"500px\"},attrs:{\"type\":\"textarea\",\"rows\":12,\"placeholder\":\"请输入行向量组\",\"resize\":\"none\"},model:{value:(_vm.form.textarea8),callback:function ($$v) {_vm.$set(_vm.form, \"textarea8\", $$v)},expression:\"form.textarea8\"}})],1),_c('div',{staticStyle:{\"float\":\"right\",\"width\":\"650px\",\"height\":\"250px\"}},[_c('div',{staticStyle:{\"position\":\"relative\",\"top\":\"110px\"}},[_vm._v(\"输出结果为： \"),_c('el-tag',{staticStyle:{\"width\":\"150px\"},domProps:{\"textContent\":_vm._s(_vm.result.result8)}}),_c('el-button',{staticStyle:{\"position\":\"relative\",\"left\":\"10px\"},attrs:{\"type\":\"primary\"},on:{\"click\":_vm.linearDependence}},[_vm._v(\"输出\")])],1)])],1)]),_c('el-tab-pane',{attrs:{\"label\":\"矩阵的特征值\"}},[_c('div',{staticClass:\"item\"},[_c('div',[_vm._v(\"说明：输入一个矩阵，输出矩阵的特征值\")]),_c('el-divider'),_c('div',[_vm._v(\"格式：两数之间用空格分隔，两行之间以英文状态下的逗号分隔\")]),_c('el-divider'),_c('div',{staticClass:\"main-left\"},[_c('el-input',{staticStyle:{\"width\":\"450px\"},attrs:{\"type\":\"textarea\",\"rows\":12,\"placeholder\":\"请输入矩阵\",\"resize\":\"none\"},model:{value:(_vm.form.textarea9),callback:function ($$v) {_vm.$set(_vm.form, \"textarea9\", $$v)},expression:\"form.textarea9\"}}),_c('div',{staticStyle:{\"position\":\"relative\",\"left\":\"20px\",\"top\":\"-120px\",\"font-size\":\"40px\",\"display\":\"inline\"}},[_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.eigenvalueMatrix}},[_vm._v(\"计算\")])],1)],1),_c('div',{staticClass:\"main-right\"},[_c('el-input',{staticStyle:{\"width\":\"450px\"},attrs:{\"type\":\"textarea\",\"rows\":12,\"resize\":\"none\"},model:{value:(_vm.result.result9),callback:function ($$v) {_vm.$set(_vm.result, \"result9\", $$v)},expression:\"result.result9\"}})],1)],1)]),_c('el-tab-pane',{attrs:{\"label\":\"判断矩阵是否相似\"}},[_c('div',{staticClass:\"item\"},[_c('div',[_vm._v(\"说明：输入两个矩阵，输出矩阵是否相似\")]),_c('el-divider'),_c('div',[_vm._v(\"格式：两数之间用空格分隔，两行之间以英文状态下的逗号分隔\")]),_c('el-divider'),_c('div',{staticClass:\"main-left\"},[_c('div',{staticClass:\"main-div3\"},[_c('el-input',{staticStyle:{\"width\":\"250px\"},attrs:{\"type\":\"textarea\",\"rows\":8,\"placeholder\":\"请输入矩阵一\",\"resize\":\"none\"},model:{value:(_vm.form.textarea10_1),callback:function ($$v) {_vm.$set(_vm.form, \"textarea10_1\", $$v)},expression:\"form.textarea10_1\"}}),_c('div',{staticStyle:{\"position\":\"relative\",\"top\":\"-75px\",\"font-size\":\"40px\",\"display\":\"inline\"}},[_c('b',{staticStyle:{\"opacity\":\"0\"}},[_vm._v(\"+\")])]),_c('el-input',{staticStyle:{\"width\":\"250px\"},attrs:{\"type\":\"textarea\",\"rows\":8,\"placeholder\":\"请输入矩阵二\",\"resize\":\"none\"},model:{value:(_vm.form.textarea10_2),callback:function ($$v) {_vm.$set(_vm.form, \"textarea10_2\", $$v)},expression:\"form.textarea10_2\"}})],1)]),_c('div',{staticClass:\"main-right\"},[_c('div',{staticStyle:{\"width\":\"650px\",\"height\":\"250px\"}},[_c('div',{staticStyle:{\"position\":\"relative\",\"top\":\"110px\"}},[_vm._v(\"输出结果为： \"),_c('el-tag',{staticStyle:{\"width\":\"150px\"},domProps:{\"textContent\":_vm._s(_vm.result.result10)}}),_c('el-button',{staticStyle:{\"position\":\"relative\",\"left\":\"10px\"},attrs:{\"type\":\"primary\"},on:{\"click\":_vm.isSimilar}},[_vm._v(\"输出\")])],1)])])],1)])],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div id=\"main\">\r\n    <el-tabs :tab-position=\"tabPosition\" style=\"height: 500px\" type=\"border-card\">\r\n      <el-tab-pane label=\"行列式求值\">\r\n        <div class=\"item\">\r\n          <div>说明：输入一个行列式，输出行列式的值</div>\r\n          <el-divider></el-divider>\r\n          <div>格式：行数和列数要相同，两数之间用空格分隔，两行之间以英文状态下的逗号分隔</div>\r\n          <el-divider></el-divider>\r\n          <div style=\"float: left\">\r\n            <el-input\r\n              type=\"textarea\"\r\n              :rows=\"12\"\r\n              style=\"width: 500px\"\r\n              placeholder=\"请输入行列式\"\r\n              resize=\"none\"\r\n              v-model=\"form.textarea1\">\r\n            </el-input>\r\n          </div>\r\n          <div style=\"float: right; width: 650px; height: 250px\">\r\n            <div style=\"position: relative;top: 110px\">输出结果为：\r\n              <el-tag style=\"width: 150px\" v-text=\"result.result1\"></el-tag>\r\n              <el-button type=\"primary\" style=\"position: relative;left: 10px\" @click=\"determinantCalculation\">输出</el-button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </el-tab-pane>\r\n      <el-tab-pane label=\"矩阵加法\">\r\n        <div class=\"item\">\r\n          <div>说明：输入两个矩阵，输出两个矩阵相加的结果</div>\r\n          <el-divider></el-divider>\r\n          <div>格式：两矩阵必须对应行列数相同，两数之间用空格分隔，两行之间以英文状态下的逗号分隔</div>\r\n          <el-divider></el-divider>\r\n          <div class=\"main-left\">\r\n            <div class=\"main-div3\">\r\n              <el-input\r\n                type=\"textarea\"\r\n                :rows=\"8\"\r\n                style=\"width: 250px\"\r\n                placeholder=\"请输入矩阵一\"\r\n                resize=\"none\"\r\n                v-model=\"form.textarea3_1\">\r\n              </el-input>\r\n              <div\r\n                style=\"position: relative;\r\n                top: -75px;\r\n                font-size: 40px;\r\n                display:inline\"><b>+</b></div>\r\n              <el-input\r\n                type=\"textarea\"\r\n                :rows=\"8\"\r\n                style=\"width: 250px\"\r\n                placeholder=\"请输入矩阵二\"\r\n                resize=\"none\"\r\n                v-model=\"form.textarea3_2\">\r\n              </el-input>\r\n            </div>\r\n          </div>\r\n          <div class=\"main-right\">\r\n            <div class=\"main-div3\">\r\n              <div\r\n                style=\"position: relative;\r\n                top: -75px;\r\n                font-size: 40px;\r\n                display:inline\"><b>=</b></div>\r\n              <el-input\r\n                type=\"textarea\"\r\n                :rows=\"8\"\r\n                style=\"width: 250px;position: relative;left: 30px\"\r\n                resize=\"none\"\r\n                v-model=\"result.result3\">\r\n              </el-input>\r\n              <el-button type=\"primary\" style=\"position: relative;left: 50px;top: -75px\" @click=\"matrixAddition\">输出</el-button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </el-tab-pane>\r\n      <el-tab-pane label=\"矩阵乘法\">\r\n        <div class=\"item\">\r\n          <div>说明：输入两个矩阵，输出两个矩阵相乘的结果</div>\r\n          <el-divider></el-divider>\r\n          <div>格式：两矩阵必须对应行列数相同,两数之间用空格分隔，两行之间以英文状态下的逗号分隔</div>\r\n          <el-divider></el-divider>\r\n          <div class=\"main-left\">\r\n            <div class=\"main-div3\">\r\n              <el-input\r\n                type=\"textarea\"\r\n                :rows=\"8\"\r\n                style=\"width: 250px\"\r\n                placeholder=\"请输入矩阵一\"\r\n                resize=\"none\"\r\n                v-model=\"form.textarea4_1\">\r\n              </el-input>\r\n              <div\r\n                style=\"position: relative;\r\n                top: -75px;\r\n                font-size: 40px;\r\n                display:inline\"><b>x</b></div>\r\n              <el-input\r\n                type=\"textarea\"\r\n                :rows=\"8\"\r\n                style=\"width: 250px\"\r\n                placeholder=\"请输入矩阵二\"\r\n                resize=\"none\"\r\n                v-model=\"form.textarea4_2\">\r\n              </el-input>\r\n            </div>\r\n          </div>\r\n          <div class=\"main-right\">\r\n            <div class=\"main-div3\">\r\n              <div\r\n                style=\"position: relative;\r\n                top: -75px;\r\n                font-size: 40px;\r\n                display:inline\"><b>=</b></div>\r\n              <el-input\r\n                type=\"textarea\"\r\n                :rows=\"8\"\r\n                style=\"width: 250px;position: relative;left: 30px\"\r\n                resize=\"none\"\r\n                v-model=\"result.result4\">\r\n              </el-input>\r\n              <el-button type=\"primary\" style=\"position: relative;left: 50px;top: -75px\" @click=\"matrixMultiplication\">输出</el-button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </el-tab-pane>\r\n      <el-tab-pane label=\"矩阵的转置\">\r\n        <div class=\"item\">\r\n          <div>说明：输入一个矩阵，输出转置矩阵</div>\r\n          <el-divider></el-divider>\r\n          <div>格式：两数之间用空格分隔，两行之间以英文状态下的逗号分隔</div>\r\n          <el-divider></el-divider>\r\n          <div class=\"main-left\">\r\n              <el-input\r\n                type=\"textarea\"\r\n                :rows=\"12\"\r\n                style=\"width: 450px\"\r\n                placeholder=\"请输入矩阵\"\r\n                resize=\"none\"\r\n                v-model=\"form.textarea5\">\r\n              </el-input>\r\n            <div\r\n              style=\"position: relative;\r\n              left: 20px;\r\n              top: -120px;\r\n              font-size: 40px;\r\n              display:inline\">\r\n              <el-button type=\"primary\" @click=\"matrixTranspose\">转置</el-button>\r\n            </div>\r\n          </div>\r\n          <div class=\"main-right\">\r\n            <el-input\r\n              type=\"textarea\"\r\n              :rows=\"12\"\r\n              style=\"width: 450px\"\r\n              resize=\"none\"\r\n              v-model=\"result.result5\">\r\n            </el-input>\r\n          </div>\r\n        </div>\r\n      </el-tab-pane>\r\n      <el-tab-pane label=\"逆矩阵\">\r\n        <div class=\"item\">\r\n          <div>说明：输入一个矩阵，输出逆矩阵</div>\r\n          <el-divider></el-divider>\r\n          <div>格式：行数和列数要相同，两数之间用空格分隔，两行之间以英文状态下的逗号分隔</div>\r\n          <el-divider></el-divider>\r\n          <div class=\"main-left\">\r\n            <el-input\r\n              type=\"textarea\"\r\n              :rows=\"12\"\r\n              style=\"width: 450px\"\r\n              placeholder=\"请输入矩阵\"\r\n              resize=\"none\"\r\n              v-model=\"form.textarea6\">\r\n            </el-input>\r\n            <div\r\n              style=\"position: relative;\r\n              left: 20px;\r\n              top: -120px;\r\n              font-size: 40px;\r\n              display:inline\">\r\n              <el-button type=\"primary\" @click=\"inverseMatrix\">求逆</el-button>\r\n            </div>\r\n          </div>\r\n          <div class=\"main-right\">\r\n            <el-input\r\n              type=\"textarea\"\r\n              :rows=\"12\"\r\n              style=\"width: 450px\"\r\n              resize=\"none\"\r\n              v-model=\"result.result6\">\r\n            </el-input>\r\n          </div>\r\n        </div>\r\n      </el-tab-pane>\r\n      <el-tab-pane label=\"求矩阵的秩\">\r\n        <div class=\"item\">\r\n          <div>说明：输入一个矩阵，输出矩阵的秩</div>\r\n          <el-divider></el-divider>\r\n          <div>格式：两数之间用空格分隔，两行之间以英文状态下的逗号分隔</div>\r\n          <el-divider></el-divider>\r\n          <div style=\"float: left\">\r\n            <el-input\r\n              type=\"textarea\"\r\n              :rows=\"12\"\r\n              style=\"width: 500px\"\r\n              placeholder=\"请输入矩阵\"\r\n              resize=\"none\"\r\n              v-model=\"form.textarea7\">\r\n            </el-input>\r\n          </div>\r\n          <div style=\"float: right; width: 650px; height: 250px\">\r\n            <div style=\"position: relative;top: 110px\">输出结果为：\r\n              <el-tag style=\"width: 150px\" v-text=\"result.result7\"></el-tag>\r\n              <el-button type=\"primary\" style=\"position: relative;left: 10px\" @click=\"matrixRank\">输出</el-button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </el-tab-pane>\r\n      <el-tab-pane label=\"线性相关的判断\">\r\n        <div class=\"item\">\r\n          <div>说明：输入多组行向量组，输出是否线性相关</div>\r\n          <el-divider></el-divider>\r\n          <div>格式：两数之间用空格分隔，两行之间以英文状态下的逗号分隔</div>\r\n          <el-divider></el-divider>\r\n          <div style=\"float: left\">\r\n            <el-input\r\n              type=\"textarea\"\r\n              :rows=\"12\"\r\n              style=\"width: 500px\"\r\n              placeholder=\"请输入行向量组\"\r\n              resize=\"none\"\r\n              v-model=\"form.textarea8\">\r\n            </el-input>\r\n          </div>\r\n          <div style=\"float: right; width: 650px; height: 250px\">\r\n            <div style=\"position: relative;top: 110px\">输出结果为：\r\n              <el-tag style=\"width: 150px\" v-text=\"result.result8\"></el-tag>\r\n              <el-button type=\"primary\" style=\"position: relative;left: 10px\" @click=\"linearDependence\">输出</el-button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </el-tab-pane>\r\n      <el-tab-pane label=\"矩阵的特征值\">\r\n        <div class=\"item\">\r\n          <div>说明：输入一个矩阵，输出矩阵的特征值</div>\r\n          <el-divider></el-divider>\r\n          <div>格式：两数之间用空格分隔，两行之间以英文状态下的逗号分隔</div>\r\n          <el-divider></el-divider>\r\n          <div class=\"main-left\">\r\n            <el-input\r\n              type=\"textarea\"\r\n              :rows=\"12\"\r\n              style=\"width: 450px\"\r\n              placeholder=\"请输入矩阵\"\r\n              resize=\"none\"\r\n              v-model=\"form.textarea9\">\r\n            </el-input>\r\n            <div\r\n              style=\"position: relative;\r\n              left: 20px;\r\n              top: -120px;\r\n              font-size: 40px;\r\n              display:inline\">\r\n              <el-button type=\"primary\" @click=\"eigenvalueMatrix\">计算</el-button>\r\n            </div>\r\n          </div>\r\n          <div class=\"main-right\">\r\n            <el-input\r\n              type=\"textarea\"\r\n              :rows=\"12\"\r\n              style=\"width: 450px\"\r\n              resize=\"none\"\r\n              v-model=\"result.result9\">\r\n            </el-input>\r\n          </div>\r\n        </div>\r\n      </el-tab-pane>\r\n      <el-tab-pane label=\"判断矩阵是否相似\">\r\n        <div class=\"item\">\r\n          <div>说明：输入两个矩阵，输出矩阵是否相似</div>\r\n          <el-divider></el-divider>\r\n          <div>格式：两数之间用空格分隔，两行之间以英文状态下的逗号分隔</div>\r\n          <el-divider></el-divider>\r\n          <div class=\"main-left\">\r\n            <div class=\"main-div3\">\r\n              <el-input\r\n                type=\"textarea\"\r\n                :rows=\"8\"\r\n                style=\"width: 250px\"\r\n                placeholder=\"请输入矩阵一\"\r\n                resize=\"none\"\r\n                v-model=\"form.textarea10_1\">\r\n              </el-input>\r\n              <div\r\n                style=\"position: relative;\r\n                top: -75px;\r\n                font-size: 40px;\r\n                display:inline\"><b style=\"opacity: 0\">+</b></div>\r\n              <el-input\r\n                type=\"textarea\"\r\n                :rows=\"8\"\r\n                style=\"width: 250px\"\r\n                placeholder=\"请输入矩阵二\"\r\n                resize=\"none\"\r\n                v-model=\"form.textarea10_2\">\r\n              </el-input>\r\n            </div>\r\n          </div>\r\n          <div class=\"main-right\">\r\n            <div style=\"width: 650px; height: 250px\">\r\n              <div style=\"position: relative;top: 110px\">输出结果为：\r\n                <el-tag style=\"width: 150px\" v-text=\"result.result10\"></el-tag>\r\n                <el-button type=\"primary\" style=\"position: relative;left: 10px\" @click=\"isSimilar\">输出</el-button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </el-tab-pane>\r\n    </el-tabs>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nconst querystring = require('querystring')\r\nexport default {\r\n  name: 'IndexHome',\r\n  data () {\r\n    return {\r\n      tabPosition: 'left',\r\n      form: {\r\n        textarea1: '',\r\n        textarea3_1: '',\r\n        textarea3_2: '',\r\n        textarea4_1: '',\r\n        textarea4_2: '',\r\n        textarea5: '',\r\n        textarea6: '',\r\n        textarea7: '',\r\n        textarea8: '',\r\n        textarea9: '',\r\n        textarea10_1: '',\r\n        textarea10_2: ''\r\n      },\r\n      result: {\r\n        result1: '空',\r\n        result2: '',\r\n        result3: '',\r\n        result4: '',\r\n        result5: '',\r\n        result6: '',\r\n        result7: '空',\r\n        result8: '空',\r\n        result9: '',\r\n        result10: '空'\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    formatArr (s) {\r\n      const respArr = s.toString().split(',')\r\n      let res = ''\r\n      for (let i = 0; i < respArr.length; i++) {\r\n        res += respArr[i] + '\\n'\r\n      }\r\n      return res\r\n    },\r\n    // 行列式求值\r\n    determinantCalculation () {\r\n      this.postRequest('/determinantCalculation', querystring.stringify(this.form)).then(resp => {\r\n        this.result.result1 = resp.obj\r\n      })\r\n    },\r\n    // 矩阵加法\r\n    matrixAddition () {\r\n      this.postRequest('/matrixAddition', querystring.stringify(this.form)).then(resp => {\r\n        this.result.result3 = this.formatArr(resp.obj)\r\n      })\r\n    },\r\n    // 矩阵乘法\r\n    matrixMultiplication () {\r\n      this.postRequest('/matrixMultiplication', querystring.stringify(this.form)).then(resp => {\r\n        this.result.result4 = this.formatArr(resp.obj)\r\n      })\r\n    },\r\n    // 矩阵转置\r\n    matrixTranspose () {\r\n      this.postRequest('/matrixTranspose', querystring.stringify(this.form)).then(resp => {\r\n        this.result.result5 = this.formatArr(resp.obj)\r\n      })\r\n    },\r\n    // 矩阵的逆\r\n    inverseMatrix () {\r\n      this.postRequest('/inverseMatrix', querystring.stringify(this.form)).then(resp => {\r\n        this.result.result6 = this.formatArr(resp.obj)\r\n      })\r\n    },\r\n    // 矩阵的秩\r\n    matrixRank () {\r\n      this.postRequest('/matrixRank', querystring.stringify(this.form)).then(resp => {\r\n        this.result.result7 = resp.obj\r\n      })\r\n    },\r\n    // 判断行向量组是否线性相关\r\n    linearDependence () {\r\n      this.postRequest('/linearDependence', querystring.stringify(this.form)).then(resp => {\r\n        this.result.result8 = resp.obj\r\n      })\r\n    },\r\n    // 求矩阵的特征值\r\n    eigenvalueMatrix () {\r\n      this.postRequest('/eigenvalueMatrix', querystring.stringify(this.form)).then(resp => {\r\n        const respArr = resp.obj.toString().split(',')\r\n        let res = ''\r\n        for (let i = 0; i < respArr.length; i++) {\r\n          if (respArr[i] !== '0') {\r\n            res += respArr[i]\r\n            if (i < respArr.length - 1) {\r\n              res += ' '\r\n            }\r\n          }\r\n        }\r\n        this.result.result9 = res\r\n      })\r\n    },\r\n    // 判断是否相似\r\n    isSimilar () {\r\n      this.postRequest('/isSimilar', querystring.stringify(this.form)).then(resp => {\r\n        this.result.result10 = resp.obj\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n#main {\r\n  margin: 0 auto;\r\n  width: 1300px;\r\n  height: 500px;\r\n  border: 1px solid #d7cdcd;\r\n  box-shadow: 0 0 25px #cac6c6;\r\n}\r\n\r\n.item {\r\n  height: 500px;\r\n  width:1200px;\r\n}\r\n\r\n.main-left {\r\n  width: 555px;\r\n  height: 300px;\r\n  float: left;\r\n}\r\n\r\n.main-right {\r\n  width: 555px;\r\n  height: 300px;\r\n  float: left;\r\n}\r\n\r\n.main-div3 {\r\n  position: relative;\r\n  top: 55px;\r\n}\r\n</style>\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./IndexHome.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./IndexHome.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./IndexHome.vue?vue&type=template&id=51b9b114&scoped=true&\"\nimport script from \"./IndexHome.vue?vue&type=script&lang=js&\"\nexport * from \"./IndexHome.vue?vue&type=script&lang=js&\"\nimport style0 from \"./IndexHome.vue?vue&type=style&index=0&id=51b9b114&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"51b9b114\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}